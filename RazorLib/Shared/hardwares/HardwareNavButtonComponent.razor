@using System.Text.RegularExpressions;
@using System.Collections.Specialized;
@using System.Collections.Concurrent;
@using RazorLib
@using RazorLib.Shared.html;
@using System.Web;
@using MudBlazor;
@using SharedLib;

@inherits ReloadPageComponentBaseModel
@implements IDisposable



@if (IsBusyProgress)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (IsExpand)
{
    if (string.IsNullOrEmpty(this.HtmlSource))
    {
        <MudAlert Severity="Severity.Error">Данные отсутствуют</MudAlert>
    }
    else
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @if (PortEntry.Id > 0)
            {
                <div class="input-group mb-3">
                    <input @bind-value="PortEntry.Name" @bind-value:event="oninput" type="text" class="form-control" placeholder="Имя порта" aria-label="Имя порта">
                    <button disabled="@(string.IsNullOrWhiteSpace(PortEntry.Name))" @onclick="UpdatePortName" class="btn btn-outline-secondary" type="button" id="button-addon2">Сохранить</button>
                </div>
            }

            <HardwareNavTitleComponent TitleText="@Text" />
            <HardwaresNavPillsComponent @ref="refHtmlRoot" HtmlSource="@HtmlSource" ReloadPage="@ReloadPage" />
            @if (!AutoLoadAndExpand)
            {
                <button @onclick="Expand" type="button" class="btn-close" aria-label="Close"></button>
            }
        </div>

    }
}
else
{
    <button title="@PagePath" @onclick="Expand" type="button" class="btn btn-primary">@($"{(string.IsNullOrEmpty(PortEntry?.Name) ? "" : $"[{PortEntry.Name}] ")}{Text}")</button>
}