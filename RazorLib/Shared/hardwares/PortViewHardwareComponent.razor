@using SharedLib;

@if (string.IsNullOrWhiteSpace(Port.Name))
{
    <span @onclick="OpeningToggle" style="cursor:pointer;" title="Номер порта" class="badge text-bg-light me-1">№@(Port.PortNum)</span>
}
else
{
    <span @onclick="OpeningToggle" style="cursor:pointer;" title="Номер порта: @(Port.PortNum)" class="badge text-bg-light  position-relative me-3 mb-2">
        @(Port.Name)
        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
            @(Port.PortNum)
        </span>
    </span>
}

@if (IsOpen)
{
    <div class="offcanvas offcanvas-end show" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel" aria-modal="true" role="dialog">
        <div class="offcanvas-header">
            <h5>
                Порт контроллера:
                <small class="text-body-secondary">'@Port.Hardware?.Name'</small>
            </h5>
            <button @onclick="OpeningToggle" type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <HardwareNavButtonComponent @ref="refBtn" PagePath="@($"?pt={Port.PortNum}")" Text="@(Port.Name)" AutoLoadAndExpand="true" />
        </div>
    </div>
    <div @onclick="OpeningToggle" class="offcanvas-backdrop fade show"></div>
}

@code {
    [Parameter, EditorRequired]
    public PortHardwareModel Port { get; set; } = default!;

    [CascadingParameter, EditorRequired]
    public Action ReloadHardwaresHandle { get; set; } = default!;

    HardwareNavButtonComponent? refBtn;

    bool IsOpen = false;

    void OpeningToggle()
    {
        IsOpen = !IsOpen;
        if (!IsOpen)
            ReloadHardwaresHandle();
    }
}
