@using MudBlazor;
@using SharedLib;

@inject ISystemCommandsService _comm
@inject ISnackbar Snackbar;

<MudTooltip Text="@(IsInitDelete ? "Подтверждаю намерение удалить команду без возможности восстановления" : "Удалить команду навсегда")">
    <button @onclick="@DeleteCommand" class="btn btn@(IsInitDelete?"":"-outline")-danger">@(IsInitDelete ? "Подтвердить удаление" : "Удалить")</button>
</MudTooltip>
@if (IsInitDelete)
{
    <MudTooltip Text="Отменить процедуру удаления команды">
        <button @onclick="() => { IsInitDelete = false; }" class="btn btn-outline-primary">Отменить удаление</button>
    </MudTooltip>
}

@code {
    [Parameter, EditorRequired]
    public int CommandId { get; set; }

    [Parameter, EditorRequired]
    public required Action UpdateCommandsList { get; set; }

    bool IsInitDelete = false;

    async Task DeleteCommand()
    {
        if (!IsInitDelete)
        {
            IsInitDelete = true;
            return;
        }

        ResponseBaseModel res = await _comm.CommandDelete(CommandId);
        Snackbar.ShowMessagesResponse(res.Messages);
    }
}