@using RazorLib.Shared.hardwares
@using Newtonsoft.Json;
@using MudBlazor;
@using SharedLib;

@inject ClientConfigModel _conf
@inject ISnackbar _snackbar

<input type="checkbox" @bind="IsChecked" name="@InputValue" class="form-check-input" aria-describedby="@($"{InputName}Help")" />
<div id="@($"{InputName}Help")" class="form-text mb-3">@((MarkupString)_conf.MetadataInput.FirstOrDefault(x => x.Key.Equals(InputName, StringComparison.OrdinalIgnoreCase)).Value)</div>

@code {
    [Parameter, EditorRequired]
    public string InputName { get; set; } = default!;

    [Parameter, EditorRequired]
    public string? InputValue { get; set; } = default!;

    [Parameter, EditorRequired]
    public bool IsChecked
    {
        set
        {
            SetValueHandler((value ? InputValue : null), InputName);
        }
        get
        {
            return FormContext?.DataContext.ContainsKey(InputName) == true;
        }
    }

    [Parameter, EditorRequired]
    public Action<string?, string?> SetValueHandler { get; set; } = default!;

    [CascadingParameter]
    public FormContextModel? FormContext { get; set; }
}
